package net.minecraft.util.datafix;

import net.minecraft.util.datafix.schemas.NamespacedSchema;
import java.util.Objects;
import java.util.function.UnaryOperator;
import net.minecraft.util.datafix.schemas.V2568;
import net.minecraft.util.datafix.fixes.OptionsRenameFieldFix;
import net.minecraft.util.datafix.fixes.MissingDimensionFix;
import net.minecraft.util.datafix.fixes.BiomeFix;
import net.minecraft.util.datafix.fixes.RenameBiomesFix;
import net.minecraft.util.datafix.schemas.V2551;
import net.minecraft.util.datafix.fixes.WorldGenSettingsFix;
import net.minecraft.util.datafix.fixes.EntityShulkerRotationFix;
import net.minecraft.util.datafix.fixes.VillagerFollowRangeFix;
import net.minecraft.util.datafix.fixes.RedstoneWireConnectionsFix;
import net.minecraft.util.datafix.fixes.StriderGravityFix;
import net.minecraft.util.datafix.fixes.BitStorageAlignFix;
import net.minecraft.util.datafix.fixes.AttributesRename;
import net.minecraft.util.datafix.schemas.V2522;
import net.minecraft.util.datafix.schemas.V2519;
import net.minecraft.util.datafix.fixes.JigsawRotationFix;
import net.minecraft.util.datafix.fixes.JigsawPropertiesFix;
import net.minecraft.util.datafix.fixes.GossipUUIDFix;
import net.minecraft.util.datafix.fixes.ItemStackUUIDFix;
import net.minecraft.util.datafix.fixes.SavedDataUUIDFix;
import net.minecraft.util.datafix.fixes.LevelUUIDFix;
import net.minecraft.util.datafix.fixes.PlayerUUIDFix;
import net.minecraft.util.datafix.fixes.BlockEntityUUIDFix;
import net.minecraft.util.datafix.fixes.EntityUUIDFix;
import net.minecraft.util.datafix.fixes.EntityProjectileOwnerFix;
import net.minecraft.util.datafix.fixes.EntityZombifiedPiglinRenameFix;
import net.minecraft.util.datafix.schemas.V2509;
import net.minecraft.util.datafix.fixes.MemoryExpiryDataFix;
import net.minecraft.util.datafix.schemas.V2505;
import net.minecraft.util.datafix.fixes.WallPropertyFix;
import net.minecraft.util.datafix.schemas.V2502;
import net.minecraft.util.datafix.fixes.FurnaceRecipeFix;
import net.minecraft.util.datafix.schemas.V2501;
import net.minecraft.util.datafix.fixes.ForcePoiRebuild;
import net.minecraft.util.datafix.fixes.StructureReferenceCountFix;
import net.minecraft.util.datafix.fixes.BeehivePoiRenameFix;
import net.minecraft.util.datafix.fixes.ChunkBiomeFix;
import net.minecraft.util.datafix.fixes.AdvancementsRenameFix;
import net.minecraft.util.datafix.fixes.RecipesRenameFix;
import net.minecraft.util.datafix.schemas.V2100;
import net.minecraft.util.datafix.fixes.RemoveGolemGossipFix;
import net.minecraft.util.datafix.fixes.ChunkLightRemoveFix;
import net.minecraft.util.datafix.fixes.ZombieVillagerRebuildXpFix;
import net.minecraft.util.datafix.fixes.VillagerRebuildLevelAndXpFix;
import net.minecraft.util.datafix.fixes.OminousBannerBlockEntityRenameFix;
import net.minecraft.util.datafix.fixes.OminousBannerRenameFix;
import net.minecraft.util.datafix.fixes.ReorganizePoi;
import net.minecraft.util.datafix.fixes.OptionsAddTextBackgroundFix;
import net.minecraft.util.datafix.schemas.V1931;
import net.minecraft.util.datafix.schemas.V1929;
import net.minecraft.util.datafix.fixes.EntityRavagerRenameFix;
import net.minecraft.util.datafix.schemas.V1928;
import net.minecraft.util.datafix.fixes.MapIdFix;
import net.minecraft.util.datafix.fixes.NewVillageFix;
import net.minecraft.util.datafix.schemas.V1920;
import net.minecraft.util.datafix.fixes.VillagerDataFix;
import net.minecraft.util.datafix.fixes.CatTypeFix;
import net.minecraft.util.datafix.fixes.ChunkStatusFix2;
import net.minecraft.util.datafix.schemas.V1909;
import net.minecraft.util.datafix.schemas.V1906;
import net.minecraft.util.datafix.fixes.ChunkStatusFix;
import net.minecraft.util.datafix.fixes.EntityCatSplitFix;
import net.minecraft.util.datafix.schemas.V1904;
import net.minecraft.util.datafix.fixes.ItemLoreFix;
import net.minecraft.util.datafix.schemas.V1801;
import net.minecraft.util.datafix.fixes.DyeItemRenameFix;
import net.minecraft.util.datafix.schemas.V1800;
import net.minecraft.util.datafix.fixes.TrappedChestBlockEntityFix;
import net.minecraft.util.datafix.fixes.RenamedCoralFansFix;
import net.minecraft.util.datafix.fixes.ObjectiveRenderTypeFix;
import net.minecraft.util.datafix.fixes.TeamDisplayNameFix;
import net.minecraft.util.datafix.fixes.ObjectiveDisplayNameFix;
import net.minecraft.util.datafix.fixes.SwimStatsRenameFix;
import net.minecraft.util.datafix.fixes.RecipesRenameningFix;
import net.minecraft.util.datafix.fixes.EntityTheRenameningFix;
import net.minecraft.util.datafix.schemas.V1510;
import net.minecraft.util.datafix.fixes.LevelDataGeneratorOptionsFix;
import net.minecraft.util.datafix.fixes.RecipesFix;
import net.minecraft.util.datafix.fixes.AdvancementsFix;
import net.minecraft.util.datafix.fixes.BlockEntityKeepPacked;
import net.minecraft.util.datafix.fixes.LeavesFix;
import net.minecraft.util.datafix.fixes.ItemStackEnchantmentNamesFix;
import net.minecraft.util.datafix.fixes.ChunkStructuresTemplateRenameFix;
import net.minecraft.util.datafix.fixes.IglooMetadataRemovalFix;
import com.mojang.serialization.Dynamic;
import com.mojang.datafixers.Typed;
import com.mojang.datafixers.DSL;
import net.minecraft.util.datafix.fixes.NamedEntityFix;
import net.minecraft.util.datafix.fixes.EntityCodSalmonFix;
import net.minecraft.util.datafix.schemas.V1486;
import net.minecraft.util.datafix.fixes.HeightmapRenamingFix;
import net.minecraft.util.datafix.fixes.EntityPufferfishRenameFix;
import net.minecraft.util.datafix.schemas.V1483;
import net.minecraft.util.datafix.schemas.V1481;
import net.minecraft.util.datafix.fixes.RenamedCoralFix;
import java.util.Map;
import com.google.common.collect.ImmutableMap;
import net.minecraft.util.datafix.fixes.BlockRenameFix;
import net.minecraft.util.datafix.fixes.ColorlessShulkerEntityFix;
import net.minecraft.util.datafix.schemas.V1470;
import net.minecraft.util.datafix.fixes.ChunkToProtochunkFix;
import net.minecraft.util.datafix.schemas.V1466;
import net.minecraft.util.datafix.fixes.EntityPaintingMotiveFix;
import net.minecraft.util.datafix.schemas.V1460;
import net.minecraft.util.datafix.fixes.BlockEntityCustomNameToComponentFix;
import net.minecraft.util.datafix.fixes.ItemCustomNameToComponentFix;
import net.minecraft.util.datafix.fixes.EntityCustomNameToComponentFix;
import net.minecraft.util.datafix.fixes.EntityItemFrameDirectionFix;
import net.minecraft.util.datafix.fixes.VillagerTradeFix;
import net.minecraft.util.datafix.fixes.SavedDataVillageCropFix;
import net.minecraft.util.datafix.schemas.V1451_7;
import net.minecraft.util.datafix.fixes.BlockEntityJukeboxFix;
import net.minecraft.util.datafix.fixes.StatsCounterFix;
import net.minecraft.util.datafix.schemas.V1451_6;
import net.minecraft.util.datafix.fixes.LevelFlatGeneratorInfoFix;
import net.minecraft.util.datafix.fixes.BlockEntityBannerColorFix;
import net.minecraft.util.datafix.fixes.EntityWolfColorFix;
import net.minecraft.util.datafix.fixes.ItemStackSpawnEggFix;
import net.minecraft.util.datafix.schemas.V1451_5;
import net.minecraft.util.datafix.fixes.ItemStackTheFlatteningFix;
import net.minecraft.util.datafix.fixes.BlockNameFlatteningFix;
import net.minecraft.util.datafix.schemas.V1451_4;
import net.minecraft.util.datafix.fixes.ItemStackMapIdFix;
import net.minecraft.util.datafix.fixes.EntityBlockStateFix;
import net.minecraft.util.datafix.schemas.V1451_3;
import net.minecraft.util.datafix.fixes.BlockEntityBlockStateFix;
import net.minecraft.util.datafix.schemas.V1451_2;
import net.minecraft.util.datafix.fixes.ChunkPalettedStorageFix;
import net.minecraft.util.datafix.schemas.V1451_1;
import net.minecraft.util.datafix.schemas.V1451;
import net.minecraft.util.datafix.fixes.BlockStateStructureTemplateFix;
import net.minecraft.util.datafix.fixes.OptionsKeyTranslationFix;
import net.minecraft.util.datafix.fixes.OptionsKeyLwjgl3Fix;
import net.minecraft.util.datafix.fixes.BedItemColorFix;
import net.minecraft.util.datafix.fixes.BedBlockEntityInjecter;
import net.minecraft.util.datafix.schemas.V1125;
import net.minecraft.util.datafix.fixes.WriteAndReadFix;
import net.minecraft.util.datafix.schemas.V1022;
import net.minecraft.util.datafix.fixes.OptionsLowerCaseLanguageFix;
import net.minecraft.util.datafix.fixes.BlockEntityShulkerBoxColorFix;
import net.minecraft.util.datafix.fixes.ItemShulkerBoxColorFix;
import net.minecraft.util.datafix.fixes.EntityShulkerColorFix;
import net.minecraft.util.datafix.schemas.V808;
import net.minecraft.util.datafix.fixes.ItemWaterPotionFix;
import net.minecraft.util.datafix.fixes.ItemBannerColorFix;
import net.minecraft.util.datafix.fixes.EntityIdFix;
import net.minecraft.util.datafix.schemas.V705;
import net.minecraft.util.datafix.fixes.BlockEntityIdFix;
import net.minecraft.util.datafix.schemas.V704;
import net.minecraft.util.datafix.fixes.EntityHorseSplitFix;
import net.minecraft.util.datafix.schemas.V703;
import net.minecraft.util.datafix.fixes.EntityZombieSplitFix;
import net.minecraft.util.datafix.schemas.V702;
import net.minecraft.util.datafix.fixes.EntitySkeletonSplitFix;
import net.minecraft.util.datafix.schemas.V701;
import net.minecraft.util.datafix.fixes.EntityElderGuardianSplitFix;
import net.minecraft.util.datafix.schemas.V700;
import net.minecraft.util.datafix.fixes.OptionsForceVBOFix;
import net.minecraft.util.datafix.fixes.EntityZombieVillagerTypeFix;
import java.util.function.Function;
import net.minecraft.util.datafix.fixes.ItemRenameFix;
import net.minecraft.util.datafix.fixes.AddNewChoices;
import net.minecraft.util.datafix.fixes.References;
import net.minecraft.util.datafix.schemas.V501;
import net.minecraft.util.datafix.fixes.ItemWrittenBookPagesStrictJsonFix;
import net.minecraft.util.datafix.fixes.EntityArmorStandSilentFix;
import net.minecraft.util.datafix.fixes.EntityTippedArrowFix;
import net.minecraft.util.datafix.schemas.V143;
import net.minecraft.util.datafix.fixes.EntityRidingToPassengersFix;
import net.minecraft.util.datafix.schemas.V135;
import net.minecraft.util.datafix.fixes.EntityRedundantChanceTagsFix;
import net.minecraft.util.datafix.fixes.EntityPaintingItemFrameDirectionFix;
import net.minecraft.util.datafix.fixes.EntityHorseSaddleFix;
import net.minecraft.util.datafix.fixes.EntityHealthFix;
import net.minecraft.util.datafix.fixes.EntityStringUuidFix;
import net.minecraft.util.datafix.fixes.EntityMinecartIdentifiersFix;
import net.minecraft.util.datafix.schemas.V107;
import net.minecraft.util.datafix.fixes.MobSpawnerEntityIdentifiersFix;
import net.minecraft.util.datafix.schemas.V106;
import net.minecraft.util.datafix.fixes.ItemSpawnEggFix;
import net.minecraft.util.datafix.fixes.ItemPotionFix;
import net.minecraft.util.datafix.fixes.ItemIdFix;
import net.minecraft.util.datafix.schemas.V102;
import net.minecraft.util.datafix.fixes.BlockEntitySignTextStrictJsonFix;
import com.mojang.datafixers.DataFix;
import net.minecraft.util.datafix.fixes.EntityEquipmentToArmorAndHandFix;
import net.minecraft.util.datafix.schemas.V100;
import net.minecraft.util.datafix.schemas.V99;
import net.minecraft.Util;
import com.mojang.datafixers.DataFixerBuilder;
import net.minecraft.SharedConstants;
import com.mojang.datafixers.DataFixer;
import com.mojang.datafixers.schemas.Schema;
import java.util.function.BiFunction;

public class DataFixers {
    private static final BiFunction<Integer, Schema, Schema> SAME;
    private static final BiFunction<Integer, Schema, Schema> SAME_NAMESPACED;
    private static final DataFixer DATA_FIXER;
    
    private static DataFixer createFixerUpper() {
        final DataFixerBuilder dataFixerBuilder1 = new DataFixerBuilder(SharedConstants.getCurrentVersion().getWorldVersion());
        addFixers(dataFixerBuilder1);
        return dataFixerBuilder1.build(Util.bootstrapExecutor());
    }
    
    public static DataFixer getDataFixer() {
        return DataFixers.DATA_FIXER;
    }
    
    private static void addFixers(final DataFixerBuilder dataFixerBuilder) {
        final Schema schema2 = dataFixerBuilder.addSchema(99, (BiFunction<Integer, Schema, Schema>)V99::new);
        final Schema schema3 = dataFixerBuilder.addSchema(100, (BiFunction<Integer, Schema, Schema>)V100::new);
        dataFixerBuilder.addFixer(new EntityEquipmentToArmorAndHandFix(schema3, true));
        final Schema schema4 = dataFixerBuilder.addSchema(101, DataFixers.SAME);
        dataFixerBuilder.addFixer(new BlockEntitySignTextStrictJsonFix(schema4, false));
        final Schema schema5 = dataFixerBuilder.addSchema(102, (BiFunction<Integer, Schema, Schema>)V102::new);
        dataFixerBuilder.addFixer(new ItemIdFix(schema5, true));
        dataFixerBuilder.addFixer(new ItemPotionFix(schema5, false));
        final Schema schema6 = dataFixerBuilder.addSchema(105, DataFixers.SAME);
        dataFixerBuilder.addFixer(new ItemSpawnEggFix(schema6, true));
        final Schema schema7 = dataFixerBuilder.addSchema(106, (BiFunction<Integer, Schema, Schema>)V106::new);
        dataFixerBuilder.addFixer(new MobSpawnerEntityIdentifiersFix(schema7, true));
        final Schema schema8 = dataFixerBuilder.addSchema(107, (BiFunction<Integer, Schema, Schema>)V107::new);
        dataFixerBuilder.addFixer(new EntityMinecartIdentifiersFix(schema8, true));
        final Schema schema9 = dataFixerBuilder.addSchema(108, DataFixers.SAME);
        dataFixerBuilder.addFixer(new EntityStringUuidFix(schema9, true));
        final Schema schema10 = dataFixerBuilder.addSchema(109, DataFixers.SAME);
        dataFixerBuilder.addFixer(new EntityHealthFix(schema10, true));
        final Schema schema11 = dataFixerBuilder.addSchema(110, DataFixers.SAME);
        dataFixerBuilder.addFixer(new EntityHorseSaddleFix(schema11, true));
        final Schema schema12 = dataFixerBuilder.addSchema(111, DataFixers.SAME);
        dataFixerBuilder.addFixer(new EntityPaintingItemFrameDirectionFix(schema12, true));
        final Schema schema13 = dataFixerBuilder.addSchema(113, DataFixers.SAME);
        dataFixerBuilder.addFixer(new EntityRedundantChanceTagsFix(schema13, true));
        final Schema schema14 = dataFixerBuilder.addSchema(135, (BiFunction<Integer, Schema, Schema>)V135::new);
        dataFixerBuilder.addFixer(new EntityRidingToPassengersFix(schema14, true));
        final Schema schema15 = dataFixerBuilder.addSchema(143, (BiFunction<Integer, Schema, Schema>)V143::new);
        dataFixerBuilder.addFixer(new EntityTippedArrowFix(schema15, true));
        final Schema schema16 = dataFixerBuilder.addSchema(147, DataFixers.SAME);
        dataFixerBuilder.addFixer(new EntityArmorStandSilentFix(schema16, true));
        final Schema schema17 = dataFixerBuilder.addSchema(165, DataFixers.SAME);
        dataFixerBuilder.addFixer(new ItemWrittenBookPagesStrictJsonFix(schema17, true));
        final Schema schema18 = dataFixerBuilder.addSchema(501, (BiFunction<Integer, Schema, Schema>)V501::new);
        dataFixerBuilder.addFixer(new AddNewChoices(schema18, "Add 1.10 entities fix", References.ENTITY));
        final Schema schema19 = dataFixerBuilder.addSchema(502, DataFixers.SAME);
        dataFixerBuilder.addFixer(ItemRenameFix.create(schema19, "cooked_fished item renamer", (Function<String, String>)(string -> Objects.equals(NamespacedSchema.ensureNamespaced(string), "minecraft:cooked_fished") ? "minecraft:cooked_fish" : string)));
        dataFixerBuilder.addFixer(new EntityZombieVillagerTypeFix(schema19, false));
        final Schema schema20 = dataFixerBuilder.addSchema(505, DataFixers.SAME);
        dataFixerBuilder.addFixer(new OptionsForceVBOFix(schema20, false));
        final Schema schema21 = dataFixerBuilder.addSchema(700, (BiFunction<Integer, Schema, Schema>)V700::new);
        dataFixerBuilder.addFixer(new EntityElderGuardianSplitFix(schema21, true));
        final Schema schema22 = dataFixerBuilder.addSchema(701, (BiFunction<Integer, Schema, Schema>)V701::new);
        dataFixerBuilder.addFixer(new EntitySkeletonSplitFix(schema22, true));
        final Schema schema23 = dataFixerBuilder.addSchema(702, (BiFunction<Integer, Schema, Schema>)V702::new);
        dataFixerBuilder.addFixer(new EntityZombieSplitFix(schema23, true));
        final Schema schema24 = dataFixerBuilder.addSchema(703, (BiFunction<Integer, Schema, Schema>)V703::new);
        dataFixerBuilder.addFixer(new EntityHorseSplitFix(schema24, true));
        final Schema schema25 = dataFixerBuilder.addSchema(704, (BiFunction<Integer, Schema, Schema>)V704::new);
        dataFixerBuilder.addFixer(new BlockEntityIdFix(schema25, true));
        final Schema schema26 = dataFixerBuilder.addSchema(705, (BiFunction<Integer, Schema, Schema>)V705::new);
        dataFixerBuilder.addFixer(new EntityIdFix(schema26, true));
        final Schema schema27 = dataFixerBuilder.addSchema(804, DataFixers.SAME_NAMESPACED);
        dataFixerBuilder.addFixer(new ItemBannerColorFix(schema27, true));
        final Schema schema28 = dataFixerBuilder.addSchema(806, DataFixers.SAME_NAMESPACED);
        dataFixerBuilder.addFixer(new ItemWaterPotionFix(schema28, false));
        final Schema schema29 = dataFixerBuilder.addSchema(808, (BiFunction<Integer, Schema, Schema>)V808::new);
        dataFixerBuilder.addFixer(new AddNewChoices(schema29, "added shulker box", References.BLOCK_ENTITY));
        final Schema schema30 = dataFixerBuilder.addSchema(808, 1, DataFixers.SAME_NAMESPACED);
        dataFixerBuilder.addFixer(new EntityShulkerColorFix(schema30, false));
        final Schema schema31 = dataFixerBuilder.addSchema(813, DataFixers.SAME_NAMESPACED);
        dataFixerBuilder.addFixer(new ItemShulkerBoxColorFix(schema31, false));
        dataFixerBuilder.addFixer(new BlockEntityShulkerBoxColorFix(schema31, false));
        final Schema schema32 = dataFixerBuilder.addSchema(816, DataFixers.SAME_NAMESPACED);
        dataFixerBuilder.addFixer(new OptionsLowerCaseLanguageFix(schema32, false));
        final Schema schema33 = dataFixerBuilder.addSchema(820, DataFixers.SAME_NAMESPACED);
        dataFixerBuilder.addFixer(ItemRenameFix.create(schema33, "totem item renamer", (Function<String, String>)createRenamer("minecraft:totem", "minecraft:totem_of_undying")));
        final Schema schema34 = dataFixerBuilder.addSchema(1022, (BiFunction<Integer, Schema, Schema>)V1022::new);
        dataFixerBuilder.addFixer(new WriteAndReadFix(schema34, "added shoulder entities to players", References.PLAYER));
        final Schema schema35 = dataFixerBuilder.addSchema(1125, (BiFunction<Integer, Schema, Schema>)V1125::new);
        dataFixerBuilder.addFixer(new BedBlockEntityInjecter(schema35, true));
        dataFixerBuilder.addFixer(new BedItemColorFix(schema35, false));
        final Schema schema36 = dataFixerBuilder.addSchema(1344, DataFixers.SAME_NAMESPACED);
        dataFixerBuilder.addFixer(new OptionsKeyLwjgl3Fix(schema36, false));
        final Schema schema37 = dataFixerBuilder.addSchema(1446, DataFixers.SAME_NAMESPACED);
        dataFixerBuilder.addFixer(new OptionsKeyTranslationFix(schema37, false));
        final Schema schema38 = dataFixerBuilder.addSchema(1450, DataFixers.SAME_NAMESPACED);
        dataFixerBuilder.addFixer(new BlockStateStructureTemplateFix(schema38, false));
        final Schema schema39 = dataFixerBuilder.addSchema(1451, (BiFunction<Integer, Schema, Schema>)V1451::new);
        dataFixerBuilder.addFixer(new AddNewChoices(schema39, "AddTrappedChestFix", References.BLOCK_ENTITY));
        final Schema schema40 = dataFixerBuilder.addSchema(1451, 1, (BiFunction<Integer, Schema, Schema>)V1451_1::new);
        dataFixerBuilder.addFixer(new ChunkPalettedStorageFix(schema40, true));
        final Schema schema41 = dataFixerBuilder.addSchema(1451, 2, (BiFunction<Integer, Schema, Schema>)V1451_2::new);
        dataFixerBuilder.addFixer(new BlockEntityBlockStateFix(schema41, true));
        final Schema schema42 = dataFixerBuilder.addSchema(1451, 3, (BiFunction<Integer, Schema, Schema>)V1451_3::new);
        dataFixerBuilder.addFixer(new EntityBlockStateFix(schema42, true));
        dataFixerBuilder.addFixer(new ItemStackMapIdFix(schema42, false));
        final Schema schema43 = dataFixerBuilder.addSchema(1451, 4, (BiFunction<Integer, Schema, Schema>)V1451_4::new);
        dataFixerBuilder.addFixer(new BlockNameFlatteningFix(schema43, true));
        dataFixerBuilder.addFixer(new ItemStackTheFlatteningFix(schema43, false));
        final Schema schema44 = dataFixerBuilder.addSchema(1451, 5, (BiFunction<Integer, Schema, Schema>)V1451_5::new);
        dataFixerBuilder.addFixer(new AddNewChoices(schema44, "RemoveNoteBlockFlowerPotFix", References.BLOCK_ENTITY));
        dataFixerBuilder.addFixer(new ItemStackSpawnEggFix(schema44, false));
        dataFixerBuilder.addFixer(new EntityWolfColorFix(schema44, false));
        dataFixerBuilder.addFixer(new BlockEntityBannerColorFix(schema44, false));
        dataFixerBuilder.addFixer(new LevelFlatGeneratorInfoFix(schema44, false));
        final Schema schema45 = dataFixerBuilder.addSchema(1451, 6, (BiFunction<Integer, Schema, Schema>)V1451_6::new);
        dataFixerBuilder.addFixer(new StatsCounterFix(schema45, true));
        dataFixerBuilder.addFixer(new BlockEntityJukeboxFix(schema45, false));
        final Schema schema46 = dataFixerBuilder.addSchema(1451, 7, (BiFunction<Integer, Schema, Schema>)V1451_7::new);
        dataFixerBuilder.addFixer(new SavedDataVillageCropFix(schema46, true));
        final Schema schema47 = dataFixerBuilder.addSchema(1451, 7, DataFixers.SAME_NAMESPACED);
        dataFixerBuilder.addFixer(new VillagerTradeFix(schema47, false));
        final Schema schema48 = dataFixerBuilder.addSchema(1456, DataFixers.SAME_NAMESPACED);
        dataFixerBuilder.addFixer(new EntityItemFrameDirectionFix(schema48, false));
        final Schema schema49 = dataFixerBuilder.addSchema(1458, DataFixers.SAME_NAMESPACED);
        dataFixerBuilder.addFixer(new EntityCustomNameToComponentFix(schema49, false));
        dataFixerBuilder.addFixer(new ItemCustomNameToComponentFix(schema49, false));
        dataFixerBuilder.addFixer(new BlockEntityCustomNameToComponentFix(schema49, false));
        final Schema schema50 = dataFixerBuilder.addSchema(1460, (BiFunction<Integer, Schema, Schema>)V1460::new);
        dataFixerBuilder.addFixer(new EntityPaintingMotiveFix(schema50, false));
        final Schema schema51 = dataFixerBuilder.addSchema(1466, (BiFunction<Integer, Schema, Schema>)V1466::new);
        dataFixerBuilder.addFixer(new ChunkToProtochunkFix(schema51, true));
        final Schema schema52 = dataFixerBuilder.addSchema(1470, (BiFunction<Integer, Schema, Schema>)V1470::new);
        dataFixerBuilder.addFixer(new AddNewChoices(schema52, "Add 1.13 entities fix", References.ENTITY));
        final Schema schema53 = dataFixerBuilder.addSchema(1474, DataFixers.SAME_NAMESPACED);
        dataFixerBuilder.addFixer(new ColorlessShulkerEntityFix(schema53, false));
        dataFixerBuilder.addFixer(BlockRenameFix.create(schema53, "Colorless shulker block fixer", (Function<String, String>)(string -> Objects.equals(NamespacedSchema.ensureNamespaced(string), "minecraft:purple_shulker_box") ? "minecraft:shulker_box" : string)));
        dataFixerBuilder.addFixer(ItemRenameFix.create(schema53, "Colorless shulker item fixer", (Function<String, String>)(string -> Objects.equals(NamespacedSchema.ensureNamespaced(string), "minecraft:purple_shulker_box") ? "minecraft:shulker_box" : string)));
        final Schema schema54 = dataFixerBuilder.addSchema(1475, DataFixers.SAME_NAMESPACED);
        dataFixerBuilder.addFixer(BlockRenameFix.create(schema54, "Flowing fixer", (Function<String, String>)createRenamer(ImmutableMap.of("minecraft:flowing_water", "minecraft:water", "minecraft:flowing_lava", "minecraft:lava"))));
        final Schema schema55 = dataFixerBuilder.addSchema(1480, DataFixers.SAME_NAMESPACED);
        dataFixerBuilder.addFixer(BlockRenameFix.create(schema55, "Rename coral blocks", (Function<String, String>)createRenamer(RenamedCoralFix.RENAMED_IDS)));
        dataFixerBuilder.addFixer(ItemRenameFix.create(schema55, "Rename coral items", (Function<String, String>)createRenamer(RenamedCoralFix.RENAMED_IDS)));
        final Schema schema56 = dataFixerBuilder.addSchema(1481, (BiFunction<Integer, Schema, Schema>)V1481::new);
        dataFixerBuilder.addFixer(new AddNewChoices(schema56, "Add conduit", References.BLOCK_ENTITY));
        final Schema schema57 = dataFixerBuilder.addSchema(1483, (BiFunction<Integer, Schema, Schema>)V1483::new);
        dataFixerBuilder.addFixer(new EntityPufferfishRenameFix(schema57, true));
        dataFixerBuilder.addFixer(ItemRenameFix.create(schema57, "Rename pufferfish egg item", (Function<String, String>)createRenamer(EntityPufferfishRenameFix.RENAMED_IDS)));
        final Schema schema58 = dataFixerBuilder.addSchema(1484, DataFixers.SAME_NAMESPACED);
        dataFixerBuilder.addFixer(ItemRenameFix.create(schema58, "Rename seagrass items", (Function<String, String>)createRenamer(ImmutableMap.of("minecraft:sea_grass", "minecraft:seagrass", "minecraft:tall_sea_grass", "minecraft:tall_seagrass"))));
        dataFixerBuilder.addFixer(BlockRenameFix.create(schema58, "Rename seagrass blocks", (Function<String, String>)createRenamer(ImmutableMap.of("minecraft:sea_grass", "minecraft:seagrass", "minecraft:tall_sea_grass", "minecraft:tall_seagrass"))));
        dataFixerBuilder.addFixer(new HeightmapRenamingFix(schema58, false));
        final Schema schema59 = dataFixerBuilder.addSchema(1486, (BiFunction<Integer, Schema, Schema>)V1486::new);
        dataFixerBuilder.addFixer(new EntityCodSalmonFix(schema59, true));
        dataFixerBuilder.addFixer(ItemRenameFix.create(schema59, "Rename cod/salmon egg items", (Function<String, String>)createRenamer(EntityCodSalmonFix.RENAMED_EGG_IDS)));
        final Schema schema60 = dataFixerBuilder.addSchema(1487, DataFixers.SAME_NAMESPACED);
        dataFixerBuilder.addFixer(ItemRenameFix.create(schema60, "Rename prismarine_brick(s)_* blocks", (Function<String, String>)createRenamer(ImmutableMap.of("minecraft:prismarine_bricks_slab", "minecraft:prismarine_brick_slab", "minecraft:prismarine_bricks_stairs", "minecraft:prismarine_brick_stairs"))));
        dataFixerBuilder.addFixer(BlockRenameFix.create(schema60, "Rename prismarine_brick(s)_* items", (Function<String, String>)createRenamer(ImmutableMap.of("minecraft:prismarine_bricks_slab", "minecraft:prismarine_brick_slab", "minecraft:prismarine_bricks_stairs", "minecraft:prismarine_brick_stairs"))));
        final Schema schema61 = dataFixerBuilder.addSchema(1488, DataFixers.SAME_NAMESPACED);
        dataFixerBuilder.addFixer(BlockRenameFix.create(schema61, "Rename kelp/kelptop", (Function<String, String>)createRenamer(ImmutableMap.of("minecraft:kelp_top", "minecraft:kelp", "minecraft:kelp", "minecraft:kelp_plant"))));
        dataFixerBuilder.addFixer(ItemRenameFix.create(schema61, "Rename kelptop", (Function<String, String>)createRenamer("minecraft:kelp_top", "minecraft:kelp")));
        dataFixerBuilder.addFixer(new NamedEntityFix(schema61, false, "Command block block entity custom name fix", References.BLOCK_ENTITY, "minecraft:command_block") {
            @Override
            protected Typed<?> fix(final Typed<?> typed) {
                return typed.<Dynamic<?>>update(DSL.remainderFinder(), (java.util.function.Function<Dynamic<?>, Dynamic<?>>)EntityCustomNameToComponentFix::fixTagCustomName);
            }
        });
        dataFixerBuilder.addFixer(new NamedEntityFix(schema61, false, "Command block minecart custom name fix", References.ENTITY, "minecraft:commandblock_minecart") {
            @Override
            protected Typed<?> fix(final Typed<?> typed) {
                return typed.<Dynamic<?>>update(DSL.remainderFinder(), (java.util.function.Function<Dynamic<?>, Dynamic<?>>)EntityCustomNameToComponentFix::fixTagCustomName);
            }
        });
        dataFixerBuilder.addFixer(new IglooMetadataRemovalFix(schema61, false));
        final Schema schema62 = dataFixerBuilder.addSchema(1490, DataFixers.SAME_NAMESPACED);
        dataFixerBuilder.addFixer(BlockRenameFix.create(schema62, "Rename melon_block", (Function<String, String>)createRenamer("minecraft:melon_block", "minecraft:melon")));
        dataFixerBuilder.addFixer(ItemRenameFix.create(schema62, "Rename melon_block/melon/speckled_melon", (Function<String, String>)createRenamer(ImmutableMap.of("minecraft:melon_block", "minecraft:melon", "minecraft:melon", "minecraft:melon_slice", "minecraft:speckled_melon", "minecraft:glistering_melon_slice"))));
        final Schema schema63 = dataFixerBuilder.addSchema(1492, DataFixers.SAME_NAMESPACED);
        dataFixerBuilder.addFixer(new ChunkStructuresTemplateRenameFix(schema63, false));
        final Schema schema64 = dataFixerBuilder.addSchema(1494, DataFixers.SAME_NAMESPACED);
        dataFixerBuilder.addFixer(new ItemStackEnchantmentNamesFix(schema64, false));
        final Schema schema65 = dataFixerBuilder.addSchema(1496, DataFixers.SAME_NAMESPACED);
        dataFixerBuilder.addFixer(new LeavesFix(schema65, false));
        final Schema schema66 = dataFixerBuilder.addSchema(1500, DataFixers.SAME_NAMESPACED);
        dataFixerBuilder.addFixer(new BlockEntityKeepPacked(schema66, false));
        final Schema schema67 = dataFixerBuilder.addSchema(1501, DataFixers.SAME_NAMESPACED);
        dataFixerBuilder.addFixer(new AdvancementsFix(schema67, false));
        final Schema schema68 = dataFixerBuilder.addSchema(1502, DataFixers.SAME_NAMESPACED);
        dataFixerBuilder.addFixer(new RecipesFix(schema68, false));
        final Schema schema69 = dataFixerBuilder.addSchema(1506, DataFixers.SAME_NAMESPACED);
        dataFixerBuilder.addFixer(new LevelDataGeneratorOptionsFix(schema69, false));
        final Schema schema70 = dataFixerBuilder.addSchema(1510, (BiFunction<Integer, Schema, Schema>)V1510::new);
        dataFixerBuilder.addFixer(BlockRenameFix.create(schema70, "Block renamening fix", (Function<String, String>)createRenamer(EntityTheRenameningFix.RENAMED_BLOCKS)));
        dataFixerBuilder.addFixer(ItemRenameFix.create(schema70, "Item renamening fix", (Function<String, String>)createRenamer(EntityTheRenameningFix.RENAMED_ITEMS)));
        dataFixerBuilder.addFixer(new RecipesRenameningFix(schema70, false));
        dataFixerBuilder.addFixer(new EntityTheRenameningFix(schema70, true));
        dataFixerBuilder.addFixer(new SwimStatsRenameFix(schema70, false));
        final Schema schema71 = dataFixerBuilder.addSchema(1514, DataFixers.SAME_NAMESPACED);
        dataFixerBuilder.addFixer(new ObjectiveDisplayNameFix(schema71, false));
        dataFixerBuilder.addFixer(new TeamDisplayNameFix(schema71, false));
        dataFixerBuilder.addFixer(new ObjectiveRenderTypeFix(schema71, false));
        final Schema schema72 = dataFixerBuilder.addSchema(1515, DataFixers.SAME_NAMESPACED);
        dataFixerBuilder.addFixer(BlockRenameFix.create(schema72, "Rename coral fan blocks", (Function<String, String>)createRenamer(RenamedCoralFansFix.RENAMED_IDS)));
        final Schema schema73 = dataFixerBuilder.addSchema(1624, DataFixers.SAME_NAMESPACED);
        dataFixerBuilder.addFixer(new TrappedChestBlockEntityFix(schema73, false));
        final Schema schema74 = dataFixerBuilder.addSchema(1800, (BiFunction<Integer, Schema, Schema>)V1800::new);
        dataFixerBuilder.addFixer(new AddNewChoices(schema74, "Added 1.14 mobs fix", References.ENTITY));
        dataFixerBuilder.addFixer(ItemRenameFix.create(schema74, "Rename dye items", (Function<String, String>)createRenamer(DyeItemRenameFix.RENAMED_IDS)));
        final Schema schema75 = dataFixerBuilder.addSchema(1801, (BiFunction<Integer, Schema, Schema>)V1801::new);
        dataFixerBuilder.addFixer(new AddNewChoices(schema75, "Added Illager Beast", References.ENTITY));
        final Schema schema76 = dataFixerBuilder.addSchema(1802, DataFixers.SAME_NAMESPACED);
        dataFixerBuilder.addFixer(BlockRenameFix.create(schema76, "Rename sign blocks & stone slabs", (Function<String, String>)createRenamer(ImmutableMap.of("minecraft:stone_slab", "minecraft:smooth_stone_slab", "minecraft:sign", "minecraft:oak_sign", "minecraft:wall_sign", "minecraft:oak_wall_sign"))));
        dataFixerBuilder.addFixer(ItemRenameFix.create(schema76, "Rename sign item & stone slabs", (Function<String, String>)createRenamer(ImmutableMap.of("minecraft:stone_slab", "minecraft:smooth_stone_slab", "minecraft:sign", "minecraft:oak_sign"))));
        final Schema schema77 = dataFixerBuilder.addSchema(1803, DataFixers.SAME_NAMESPACED);
        dataFixerBuilder.addFixer(new ItemLoreFix(schema77, false));
        final Schema schema78 = dataFixerBuilder.addSchema(1904, (BiFunction<Integer, Schema, Schema>)V1904::new);
        dataFixerBuilder.addFixer(new AddNewChoices(schema78, "Added Cats", References.ENTITY));
        dataFixerBuilder.addFixer(new EntityCatSplitFix(schema78, false));
        final Schema schema79 = dataFixerBuilder.addSchema(1905, DataFixers.SAME_NAMESPACED);
        dataFixerBuilder.addFixer(new ChunkStatusFix(schema79, false));
        final Schema schema80 = dataFixerBuilder.addSchema(1906, (BiFunction<Integer, Schema, Schema>)V1906::new);
        dataFixerBuilder.addFixer(new AddNewChoices(schema80, "Add POI Blocks", References.BLOCK_ENTITY));
        final Schema schema81 = dataFixerBuilder.addSchema(1909, (BiFunction<Integer, Schema, Schema>)V1909::new);
        dataFixerBuilder.addFixer(new AddNewChoices(schema81, "Add jigsaw", References.BLOCK_ENTITY));
        final Schema schema82 = dataFixerBuilder.addSchema(1911, DataFixers.SAME_NAMESPACED);
        dataFixerBuilder.addFixer(new ChunkStatusFix2(schema82, false));
        final Schema schema83 = dataFixerBuilder.addSchema(1917, DataFixers.SAME_NAMESPACED);
        dataFixerBuilder.addFixer(new CatTypeFix(schema83, false));
        final Schema schema84 = dataFixerBuilder.addSchema(1918, DataFixers.SAME_NAMESPACED);
        dataFixerBuilder.addFixer(new VillagerDataFix(schema84, "minecraft:villager"));
        dataFixerBuilder.addFixer(new VillagerDataFix(schema84, "minecraft:zombie_villager"));
        final Schema schema85 = dataFixerBuilder.addSchema(1920, (BiFunction<Integer, Schema, Schema>)V1920::new);
        dataFixerBuilder.addFixer(new NewVillageFix(schema85, false));
        dataFixerBuilder.addFixer(new AddNewChoices(schema85, "Add campfire", References.BLOCK_ENTITY));
        final Schema schema86 = dataFixerBuilder.addSchema(1925, DataFixers.SAME_NAMESPACED);
        dataFixerBuilder.addFixer(new MapIdFix(schema86, false));
        final Schema schema87 = dataFixerBuilder.addSchema(1928, (BiFunction<Integer, Schema, Schema>)V1928::new);
        dataFixerBuilder.addFixer(new EntityRavagerRenameFix(schema87, true));
        dataFixerBuilder.addFixer(ItemRenameFix.create(schema87, "Rename ravager egg item", (Function<String, String>)createRenamer(EntityRavagerRenameFix.RENAMED_IDS)));
        final Schema schema88 = dataFixerBuilder.addSchema(1929, (BiFunction<Integer, Schema, Schema>)V1929::new);
        dataFixerBuilder.addFixer(new AddNewChoices(schema88, "Add Wandering Trader and Trader Llama", References.ENTITY));
        final Schema schema89 = dataFixerBuilder.addSchema(1931, (BiFunction<Integer, Schema, Schema>)V1931::new);
        dataFixerBuilder.addFixer(new AddNewChoices(schema89, "Added Fox", References.ENTITY));
        final Schema schema90 = dataFixerBuilder.addSchema(1936, DataFixers.SAME_NAMESPACED);
        dataFixerBuilder.addFixer(new OptionsAddTextBackgroundFix(schema90, false));
        final Schema schema91 = dataFixerBuilder.addSchema(1946, DataFixers.SAME_NAMESPACED);
        dataFixerBuilder.addFixer(new ReorganizePoi(schema91, false));
        final Schema schema92 = dataFixerBuilder.addSchema(1948, DataFixers.SAME_NAMESPACED);
        dataFixerBuilder.addFixer(new OminousBannerRenameFix(schema92, false));
        final Schema schema93 = dataFixerBuilder.addSchema(1953, DataFixers.SAME_NAMESPACED);
        dataFixerBuilder.addFixer(new OminousBannerBlockEntityRenameFix(schema93, false));
        final Schema schema94 = dataFixerBuilder.addSchema(1955, DataFixers.SAME_NAMESPACED);
        dataFixerBuilder.addFixer(new VillagerRebuildLevelAndXpFix(schema94, false));
        dataFixerBuilder.addFixer(new ZombieVillagerRebuildXpFix(schema94, false));
        final Schema schema95 = dataFixerBuilder.addSchema(1961, DataFixers.SAME_NAMESPACED);
        dataFixerBuilder.addFixer(new ChunkLightRemoveFix(schema95, false));
        final Schema schema96 = dataFixerBuilder.addSchema(1963, DataFixers.SAME_NAMESPACED);
        dataFixerBuilder.addFixer(new RemoveGolemGossipFix(schema96, false));
        final Schema schema97 = dataFixerBuilder.addSchema(2100, (BiFunction<Integer, Schema, Schema>)V2100::new);
        dataFixerBuilder.addFixer(new AddNewChoices(schema97, "Added Bee and Bee Stinger", References.ENTITY));
        dataFixerBuilder.addFixer(new AddNewChoices(schema97, "Add beehive", References.BLOCK_ENTITY));
        dataFixerBuilder.addFixer(new RecipesRenameFix(schema97, false, "Rename sugar recipe", (Function<String, String>)createRenamer("minecraft:sugar", "sugar_from_sugar_cane")));
        dataFixerBuilder.addFixer(new AdvancementsRenameFix(schema97, false, "Rename sugar recipe advancement", (Function<String, String>)createRenamer("minecraft:recipes/misc/sugar", "minecraft:recipes/misc/sugar_from_sugar_cane")));
        final Schema schema98 = dataFixerBuilder.addSchema(2202, DataFixers.SAME_NAMESPACED);
        dataFixerBuilder.addFixer(new ChunkBiomeFix(schema98, false));
        final Schema schema99 = dataFixerBuilder.addSchema(2209, DataFixers.SAME_NAMESPACED);
        dataFixerBuilder.addFixer(ItemRenameFix.create(schema99, "Rename bee_hive item to beehive", (Function<String, String>)createRenamer("minecraft:bee_hive", "minecraft:beehive")));
        dataFixerBuilder.addFixer(new BeehivePoiRenameFix(schema99));
        dataFixerBuilder.addFixer(BlockRenameFix.create(schema99, "Rename bee_hive block to beehive", (Function<String, String>)createRenamer("minecraft:bee_hive", "minecraft:beehive")));
        final Schema schema100 = dataFixerBuilder.addSchema(2211, DataFixers.SAME_NAMESPACED);
        dataFixerBuilder.addFixer(new StructureReferenceCountFix(schema100, false));
        final Schema schema101 = dataFixerBuilder.addSchema(2218, DataFixers.SAME_NAMESPACED);
        dataFixerBuilder.addFixer(new ForcePoiRebuild(schema101, false));
        final Schema schema102 = dataFixerBuilder.addSchema(2501, (BiFunction<Integer, Schema, Schema>)V2501::new);
        dataFixerBuilder.addFixer(new FurnaceRecipeFix(schema102, true));
        final Schema schema103 = dataFixerBuilder.addSchema(2502, (BiFunction<Integer, Schema, Schema>)V2502::new);
        dataFixerBuilder.addFixer(new AddNewChoices(schema103, "Added Hoglin", References.ENTITY));
        final Schema schema104 = dataFixerBuilder.addSchema(2503, DataFixers.SAME_NAMESPACED);
        dataFixerBuilder.addFixer(new WallPropertyFix(schema104, false));
        dataFixerBuilder.addFixer(new AdvancementsRenameFix(schema104, false, "Composter category change", (Function<String, String>)createRenamer("minecraft:recipes/misc/composter", "minecraft:recipes/decorations/composter")));
        final Schema schema105 = dataFixerBuilder.addSchema(2505, (BiFunction<Integer, Schema, Schema>)V2505::new);
        dataFixerBuilder.addFixer(new AddNewChoices(schema105, "Added Piglin", References.ENTITY));
        dataFixerBuilder.addFixer(new MemoryExpiryDataFix(schema105, "minecraft:villager"));
        final Schema schema106 = dataFixerBuilder.addSchema(2508, DataFixers.SAME_NAMESPACED);
        dataFixerBuilder.addFixer(ItemRenameFix.create(schema106, "Renamed fungi items to fungus", (Function<String, String>)createRenamer(ImmutableMap.of("minecraft:warped_fungi", "minecraft:warped_fungus", "minecraft:crimson_fungi", "minecraft:crimson_fungus"))));
        dataFixerBuilder.addFixer(BlockRenameFix.create(schema106, "Renamed fungi blocks to fungus", (Function<String, String>)createRenamer(ImmutableMap.of("minecraft:warped_fungi", "minecraft:warped_fungus", "minecraft:crimson_fungi", "minecraft:crimson_fungus"))));
        final Schema schema107 = dataFixerBuilder.addSchema(2509, (BiFunction<Integer, Schema, Schema>)V2509::new);
        dataFixerBuilder.addFixer(new EntityZombifiedPiglinRenameFix(schema107));
        dataFixerBuilder.addFixer(ItemRenameFix.create(schema107, "Rename zombie pigman egg item", (Function<String, String>)createRenamer(EntityZombifiedPiglinRenameFix.RENAMED_IDS)));
        final Schema schema108 = dataFixerBuilder.addSchema(2511, DataFixers.SAME_NAMESPACED);
        dataFixerBuilder.addFixer(new EntityProjectileOwnerFix(schema108));
        final Schema schema109 = dataFixerBuilder.addSchema(2514, DataFixers.SAME_NAMESPACED);
        dataFixerBuilder.addFixer(new EntityUUIDFix(schema109));
        dataFixerBuilder.addFixer(new BlockEntityUUIDFix(schema109));
        dataFixerBuilder.addFixer(new PlayerUUIDFix(schema109));
        dataFixerBuilder.addFixer(new LevelUUIDFix(schema109));
        dataFixerBuilder.addFixer(new SavedDataUUIDFix(schema109));
        dataFixerBuilder.addFixer(new ItemStackUUIDFix(schema109));
        final Schema schema110 = dataFixerBuilder.addSchema(2516, DataFixers.SAME_NAMESPACED);
        dataFixerBuilder.addFixer(new GossipUUIDFix(schema110, "minecraft:villager"));
        dataFixerBuilder.addFixer(new GossipUUIDFix(schema110, "minecraft:zombie_villager"));
        final Schema schema111 = dataFixerBuilder.addSchema(2518, DataFixers.SAME_NAMESPACED);
        dataFixerBuilder.addFixer(new JigsawPropertiesFix(schema111, false));
        dataFixerBuilder.addFixer(new JigsawRotationFix(schema111, false));
        final Schema schema112 = dataFixerBuilder.addSchema(2519, (BiFunction<Integer, Schema, Schema>)V2519::new);
        dataFixerBuilder.addFixer(new AddNewChoices(schema112, "Added Strider", References.ENTITY));
        final Schema schema113 = dataFixerBuilder.addSchema(2522, (BiFunction<Integer, Schema, Schema>)V2522::new);
        dataFixerBuilder.addFixer(new AddNewChoices(schema113, "Added Zoglin", References.ENTITY));
        final Schema schema114 = dataFixerBuilder.addSchema(2523, DataFixers.SAME_NAMESPACED);
        dataFixerBuilder.addFixer(new AttributesRename(schema114));
        final Schema schema115 = dataFixerBuilder.addSchema(2527, DataFixers.SAME_NAMESPACED);
        dataFixerBuilder.addFixer(new BitStorageAlignFix(schema115));
        final Schema schema116 = dataFixerBuilder.addSchema(2528, DataFixers.SAME_NAMESPACED);
        dataFixerBuilder.addFixer(ItemRenameFix.create(schema116, "Rename soul fire torch and soul fire lantern", (Function<String, String>)createRenamer(ImmutableMap.of("minecraft:soul_fire_torch", "minecraft:soul_torch", "minecraft:soul_fire_lantern", "minecraft:soul_lantern"))));
        dataFixerBuilder.addFixer(BlockRenameFix.create(schema116, "Rename soul fire torch and soul fire lantern", (Function<String, String>)createRenamer(ImmutableMap.of("minecraft:soul_fire_torch", "minecraft:soul_torch", "minecraft:soul_fire_wall_torch", "minecraft:soul_wall_torch", "minecraft:soul_fire_lantern", "minecraft:soul_lantern"))));
        final Schema schema117 = dataFixerBuilder.addSchema(2529, DataFixers.SAME_NAMESPACED);
        dataFixerBuilder.addFixer(new StriderGravityFix(schema117, false));
        final Schema schema118 = dataFixerBuilder.addSchema(2531, DataFixers.SAME_NAMESPACED);
        dataFixerBuilder.addFixer(new RedstoneWireConnectionsFix(schema118));
        final Schema schema119 = dataFixerBuilder.addSchema(2533, DataFixers.SAME_NAMESPACED);
        dataFixerBuilder.addFixer(new VillagerFollowRangeFix(schema119));
        final Schema schema120 = dataFixerBuilder.addSchema(2535, DataFixers.SAME_NAMESPACED);
        dataFixerBuilder.addFixer(new EntityShulkerRotationFix(schema120));
        final Schema schema121 = dataFixerBuilder.addSchema(2550, DataFixers.SAME_NAMESPACED);
        dataFixerBuilder.addFixer(new WorldGenSettingsFix(schema121));
        final Schema schema122 = dataFixerBuilder.addSchema(2551, (BiFunction<Integer, Schema, Schema>)V2551::new);
        dataFixerBuilder.addFixer(new WriteAndReadFix(schema122, "add types to WorldGenData", References.WORLD_GEN_SETTINGS));
        final Schema schema123 = dataFixerBuilder.addSchema(2552, DataFixers.SAME_NAMESPACED);
        dataFixerBuilder.addFixer(new RenameBiomesFix(schema123, false, "Nether biome rename", ImmutableMap.of("minecraft:nether", "minecraft:nether_wastes")));
        final Schema schema124 = dataFixerBuilder.addSchema(2553, DataFixers.SAME_NAMESPACED);
        dataFixerBuilder.addFixer(new BiomeFix(schema124, false));
        final Schema schema125 = dataFixerBuilder.addSchema(2558, DataFixers.SAME_NAMESPACED);
        dataFixerBuilder.addFixer(new MissingDimensionFix(schema125, false));
        dataFixerBuilder.addFixer(new OptionsRenameFieldFix(schema125, false, "Rename swapHands setting", "key_key.swapHands", "key_key.swapOffhand"));
        final Schema schema126 = dataFixerBuilder.addSchema(2568, (BiFunction<Integer, Schema, Schema>)V2568::new);
        dataFixerBuilder.addFixer(new AddNewChoices(schema126, "Added Piglin Brute", References.ENTITY));
    }
    
    private static UnaryOperator<String> createRenamer(final Map<String, String> map) {
        return (UnaryOperator<String>)(string -> (String)map.getOrDefault(string, string));
    }
    
    private static UnaryOperator<String> createRenamer(final String string1, final String string2) {
        return (UnaryOperator<String>)(string3 -> Objects.equals(string3, string1) ? string2 : string3);
    }
    
    static {
        SAME = Schema::new;
        SAME_NAMESPACED = NamespacedSchema::new;
        DATA_FIXER = createFixerUpper();
    }
}
